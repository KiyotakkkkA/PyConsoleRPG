from src.services.utils.extensions.ascii.rus_alph import RUS_LETTERS

LETTERS = {
    'a': [
        " █████╗ ",
        "██╔══██╗",
        "███████║",
        "██╔══██║",
        "██║  ██║",
        "╚═╝  ╚═╝"
    ],
    'b': [
        "██████╗ ",
        "██╔══██╗",
        "██████╔╝",
        "██╔══██╗",
        "██████╔╝",
        "╚═════╝ "
    ],
    'c': [
        " ██████╗",
        "██╔════╝",
        "██║     ",
        "██║     ",
        "╚██████╗",
        " ╚═════╝"
    ],
    'd': [
        "██████╗ ",
        "██╔══██╗",
        "██║  ██║",
        "██║  ██║",
        "██████╔╝",
        "╚═════╝ "
    ],
    'e': [
        "███████╗",
        "██╔════╝",
        "█████╗  ",
        "██╔══╝  ",
        "███████╗",
        "╚══════╝"
    ],
    'f': [
        "███████╗",
        "██╔════╝",
        "█████╗  ",
        "██╔══╝  ",
        "██║     ",
        "╚═╝     "
    ],
    'g': [
        " ██████╗ ",
        "██╔════╝ ",
        "██║  ███╗",
        "██║   ██║",
        "╚██████╔╝",
        " ╚═════╝ "
    ],
    'h': [
        "██╗  ██╗",
        "██║  ██║",
        "███████║",
        "██╔══██║",
        "██║  ██║",
        "╚═╝  ╚═╝"
    ],
    'i': [
        "██╗",
        "██║",
        "██║",
        "██║",
        "██║",
        "╚═╝"
    ],
    'j': [
        "     ██╗",
        "     ██║",
        "     ██║",
        "██   ██║",
        "╚█████╔╝",
        " ╚════╝ "
    ],
    'k': [
        "██╗  ██╗",
        "██║ ██╔╝",
        "█████╔╝ ",
        "██╔═██╗ ",
        "██║  ██╗",
        "╚═╝  ╚═╝"
    ],
    'l': [
        "██╗     ",
        "██║     ",
        "██║     ",
        "██║     ",
        "███████╗",
        "╚══════╝"
    ],
    'm': [
        "███╗   ███╗",
        "████╗ ████║",
        "██╔████╔██║",
        "██║╚██╔╝██║",
        "██║ ╚═╝ ██║",
        "╚═╝     ╚═╝"
    ],
    'n': [
        "███╗   ██╗",
        "████╗  ██║",
        "██╔██╗ ██║",
        "██║╚██╗██║",
        "██║ ╚████║",
        "╚═╝  ╚═══╝"
    ],
    'o': [
        " ██████╗ ",
        "██╔═══██╗",
        "██║   ██║",
        "██║   ██║",
        "╚██████╔╝",
        " ╚═════╝ "
    ],
    'p': [
        "██████╗ ",
        "██╔══██╗",
        "██████╔╝",
        "██╔═══╝ ",
        "██║     ",
        "╚═╝     "
    ],
    'q': [
        " ██████╗ ",
        "██╔═══██╗",
        "██║   ██║",
        "██║▄▄ ██║",
        "╚██████╔╝",
        " ╚══▀▀═╝ "
    ],
    'r': [
        "██████╗ ",
        "██╔══██╗",
        "██████╔╝",
        "██╔══██╗",
        "██║  ██║",
        "╚═╝  ╚═╝"
    ],
    's': [
        "███████╗",
        "██╔════╝",
        "███████╗",
        "╚════██║",
        "███████║",
        "╚══════╝"
    ],
    't': [
        "████████╗",
        "╚══██╔══╝",
        "   ██║   ",
        "   ██║   ",
        "   ██║   ",
        "   ╚═╝   "
    ],
    'u': [
        "██╗   ██╗",
        "██║   ██║",
        "██║   ██║",
        "██║   ██║",
        "╚██████╔╝",
        " ╚═════╝ "
    ],
    'v': [
        "██╗   ██╗",
        "██║   ██║",
        "██║   ██║",
        "╚██╗ ██╔╝",
        " ╚████╔╝ ",
        "  ╚═══╝  "
    ],
    'w': [
        "██╗    ██╗",
        "██║    ██║",
        "██║ █╗ ██║",
        "██║███╗██║",
        "╚███╔███╔╝",
        " ╚══╝╚══╝ "
    ],
    'x': [
        "██╗  ██╗",
        "╚██╗██╔╝",
        " ╚███╔╝ ",
        " ██╔██╗ ",
        "██╔╝ ██╗",
        "╚═╝  ╚═╝"
    ],
    'y': [
        "██╗   ██╗",
        "╚██╗ ██╔╝",
        " ╚████╔╝ ",
        "  ╚██╔╝  ",
        "   ██║   ",
        "   ╚═╝   "
    ],
    'z': [
        "███████╗",
        "╚══███╔╝",
        "  ███╔╝ ",
        " ███╔╝  ",
        "███████╗",
        "╚══════╝"
    ],
    '0': [
        " ██████╗ ",
        "██╔═████╗",
        "██║██╔██║",
        "████╔╝██║",
        "╚██████╔╝",
        " ╚═════╝ "
    ],
    '1': [
        " ██╗",
        "███║",
        "╚██║",
        " ██║",
        " ██║",
        " ╚═╝"
    ],
    '2': [
        "██████╗ ",
        "╚════██╗",
        " █████╔╝",
        "██╔═══╝ ",
        "███████╗",
        "╚══════╝"
    ],
    '3': [
        "██████╗ ",
        "╚════██╗",
        " █████╔╝",
        " ╚═══██╗",
        "██████╔╝",
        "╚═════╝ "
    ],
    '4': [
        "██╗  ██╗",
        "██║  ██║",
        "███████║",
        "╚════██║",
        "     ██║",
        "     ╚═╝"
    ],
    '5': [
        "███████╗",
        "██╔════╝",
        "███████╗",
        "╚════██║",
        "███████║",
        "╚══════╝"
    ],
    '6': [
        " ██████╗ ",
        "██╔════╝ ",
        "███████╗ ",
        "██╔═══██╗",
        "╚██████╔╝",
        " ╚═════╝ "
    ],
    '7': [
        "███████╗",
        "╚════██║",
        "    ██╔╝",
        "   ██╔╝ ",
        "   ██║  ",
        "   ╚═╝  "
    ],
    '8': [
        " █████╗ ",
        "██╔══██╗",
        "╚█████╔╝",
        "██╔══██╗",
        "╚█████╔╝",
        " ╚════╝ "
    ],
    '9': [
        " █████╗ ",
        "██╔══██╗",
        "╚██████║",
        " ╚═══██║",
        " █████╔╝",
        " ╚════╝ "
    ],
    ' ': [
        "      ",
        "      ",
        "      ",
        "      ",
        "      ",
        "      "
    ],
    '.': [
        "   ",
        "   ",
        "   ",
        "   ",
        "██╗",
        "╚═╝"
    ],
    ',': [
        "   ",
        "   ",
        "   ",
        "   ",
        "██╗",
        "╚█║"
    ],
    '!': [
        "██╗",
        "██║",
        "██║",
        "╚═╝",
        "██╗",
        "╚═╝"
    ],
    '?': [
        "██████╗ ",
        "╚════██╗",
        "  ▄███╔╝",
        "  ╚══╝  ",
        "   ██╗  ",
        "   ╚═╝  "
    ],
    '-': [
        "      ",
        "      ",
        "█████╗",
        "╚════╝",
        "      ",
        "      "
    ],
    '_': [
        "        ",
        "        ",
        "        ",
        "        ",
        "███████╗",
        "╚══════╝"
    ],
    '+': [
        "       ",
        "  ██╗  ",
        "██████╗",
        "╚═██╔═╝",
        "  ╚═╝  ",
        "       "
    ],
    '=': [
        "        ",
        "███████╗",
        "╚══════╝",
        "███████╗",
        "╚══════╝",
        "        "
    ],
    ':': [
        "   ",
        "██╗",
        "╚═╝",
        "██╗",
        "╚═╝",
        "   "
    ],
    ';': [
        "   ",
        "██╗",
        "╚═╝",
        "██╗",
        "╚█║",
        " ╚╝"
    ],
    '/': [
        "    ██╗",
        "   ██╔╝",
        "  ██╔╝ ",
        " ██╔╝  ",
        "██╔╝   ",
        "╚═╝    "
    ],
    '\\': [
        "██╗    ",
        "╚██╗   ",
        " ╚██╗  ",
        "  ╚██╗ ",
        "   ╚██╗",
        "    ╚═╝"
    ]
}

LETTERS.update(RUS_LETTERS)

class ToArtConverter:
    """
    Класс для преобразования текста в ASCII Art
    """
       
    @classmethod
    def _normalize_letter(cls, letter, width):
        """
        Выравнивает ширину символа
        
        Args:
            letter (list): Список строк, представляющих символ
            width (int): Целевая ширина
            
        Returns:
            list: Выровненный список строк
        """
        result = []
        for line in letter:
            result.append(line + " " * (width - len(line)))
        return result
    
    @classmethod
    def text_to_art(cls, text):
        """
        Преобразует текст в ASCII Art
        
        Args:
            text (str): Входной текст
            
        Returns:
            list: ASCII Art в виде списка строк
        """
        
        height = len(next(iter(LETTERS.values())))
        result = [""] * height
        
        for char in text.lower():
            if char in LETTERS:
                letter = cls._normalize_letter(LETTERS[char], len(LETTERS[char][0]))
                for i in range(height):
                    result[i] += letter[i]
            else:
                space = cls._normalize_letter(LETTERS[' '], len(LETTERS[' '][0]))
                for i in range(height):
                    result[i] += space[i]
        
        return result
    
    @classmethod
    def print_ascii_art(cls, text):
        """
        Печатает ASCII Art для заданного текста
        
        Args:
            text (str): Входной текст
        """
        for line in cls.text_to_art(text):
            print(line)